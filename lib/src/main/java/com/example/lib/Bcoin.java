package com.example.lib;

import cn.hutool.crypto.Mode;
import cn.hutool.crypto.Padding;
import cn.hutool.crypto.digest.DigestUtil;
import cn.hutool.crypto.symmetric.AES;
import org.apache.commons.codec.binary.Base64;

import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;

public class Bcoin {
    public static String decry(String data,String token){
        byte[] key,iv;
        key = iv = DigestUtil.md5(token);
        AES aes =  new AES(Mode.CBC, Padding.PKCS5Padding, new SecretKeySpec(key, "AES"), new IvParameterSpec(iv));
        return aes.decryptStr(Base64.decodeBase64(data));
    }

    public static void main(String[] args) {
//        String data = "";
//        String token = "b3993af918e85bd6ac3c32c03190a2aa";
//        System.out.println(decry(data,token));

        String data = "168078413249146getEntrustByUserIdBySecretNew";
        String token = "b3993af918e85bd6ac3c32c03190a2aa";
        System.out.println(getSign(data,token));

         data = "168078413249146getEntrustByUserIdBySecretNew";
         token = "b3993af918e85bd6ac3c32c03190a2aa";
        System.out.println(getSign(data,token));

         data = "168078413249146getEntrustByUserIdBySecretNew";
         token = "b3993af918e85bd6ac3c32c03190a2aa";
        System.out.println(getSign(data,token));
    }

    // FFPIKEEGCKEDOHFIHSKMMRNQQMZYPOQR
    //CFFPIKEEGCKEDOHFIHSKMMRNQQMZYPOQR
    private static int a = 1;
    public static String getSign(String data,String token){
        int b = a++ % 3;
        a = a == Integer.MAX_VALUE ? 0 : a;
        return b % 3 == 1 ?"d" + DigestUtil.md5Hex(token+data) : b == 2? "C" + cxor(data,token).toUpperCase():"b" + cxor(data,token);
    }
    public static String cxor(String a1, String a2) {
        int len = Math.min(a1.length(), a2.length());
        byte[] v6 = new byte[len];
        for (int i = 0; i < len; i++) {
            v6[i] = (byte) ((a1.charAt(i) ^ a2.charAt(i)) % 0x1A + 97);
        }
        return new String(v6);
    }

}
